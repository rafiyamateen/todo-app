{"version":3,"sources":["Components/AddButton/AddButton.jsx","Components/AddForm/AddForm.jsx","Components/TodoList/TodoList.jsx","Components/EditForm/EditForm.jsx","Components/UpdateBtn/UpdateBtn.jsx","App.js","index.js"],"names":["AddButton","addItem","OverlayTrigger","placement","overlay","Tooltip","id","className","onClick","AddForm","onChange","input","type","value","todo","placeholder","TodoList","todoList","editItem","deleteItem","ListGroup","variant","map","Item","EditForm","UpdateBtn","update","App","props","e","setState","target","alert","state","str","title","toUpperCase","slice","newList","push","localStorage","setItem","JSON","stringify","edit","filteredList","filter","parse","getItem","toEdit","string","firstCap","updateItem","onEdit","document","getElementById","focus","this","Alert","show","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.de02e660.chunk.js","sourcesContent":["import './AddButton.css'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { PlusCircleFill } from 'react-bootstrap-icons';\r\nconst AddButton = ({ addItem }) => {\r\n    return <OverlayTrigger placement='bottom'\r\n        overlay={\r\n            <Tooltip id='tooltip-bottom'>add</Tooltip>\r\n        } >\r\n\r\n        <PlusCircleFill className='icons addIcon' onClick={addItem} ></PlusCircleFill>\r\n    </OverlayTrigger>\r\n}\r\nexport default AddButton;","const AddForm = ({ onChange, input }) => {\r\n    return <input className='input' id='addForm' type='text' value={input.todo} onChange={onChange} placeholder='Add an item' />\r\n}\r\nexport default AddForm;","import { PencilSquare, XCircleFill } from 'react-bootstrap-icons';\r\nimport { ListGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ todoList, editItem, deleteItem }) => {\r\n    return <ListGroup variant='flush'>\r\n        {todoList.map((todo) => {\r\n            return <ListGroup.Item key={todo.id} id='list'>\r\n                <span>\r\n                    {todo.todo}\r\n                </span>\r\n                <span id='listIcons'>\r\n                    <OverlayTrigger placement='bottom'\r\n                        overlay={\r\n                            <Tooltip id='tooltip-bottom'>edit</Tooltip>\r\n                        } >\r\n                        <PencilSquare className='icons editIcon' onClick={() => editItem(todo)}>Edit</PencilSquare>\r\n                    </OverlayTrigger>\r\n                    <OverlayTrigger placement='bottom'\r\n                        overlay={\r\n                            <Tooltip id='tooltip-bottom'>delete</Tooltip>\r\n                        } >\r\n                        <XCircleFill className='icons delIcon' onClick={() => deleteItem(todo.id)}>Delete</XCircleFill>\r\n                    </OverlayTrigger>\r\n                </span>\r\n            </ListGroup.Item>\r\n        })}\r\n    </ListGroup>\r\n}\r\nexport default TodoList;","const EditForm = ({ input, onChange }) => {\r\n    return <input className='input' id='editForm' value={input.todo} onChange={onChange} />\r\n}\r\nexport default EditForm;","import './UpdateBtn.css'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { CheckCircleFill } from 'react-bootstrap-icons';\r\n\r\nconst UpdateBtn = ({ input, update }) => {\r\n    return <OverlayTrigger placement='bottom'\r\n        overlay={<Tooltip id='tooltip-bottom'>update</Tooltip>} >\r\n        <CheckCircleFill className='updateBtn icons' onClick={() => { update(input) }} />\r\n    </OverlayTrigger>\r\n}\r\nexport default UpdateBtn;","import React from 'react';\r\nimport './App.css';\r\nimport AddButton from './Components/AddButton/AddButton';\r\nimport AddForm from './Components/AddForm/AddForm'\r\nimport TodoList from './Components/TodoList/TodoList'\r\nimport EditForm from './Components/EditForm/EditForm'\r\nimport UpdateBtn from './Components/UpdateBtn/UpdateBtn'\r\nimport { Alert } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      todoList: JSON.parse(localStorage.getItem('todoList')) || [],\r\n      id: JSON.parse(localStorage.getItem('id')) || 0,\r\n      input: {\r\n        todo: ''\r\n      },\r\n      edit: false,\r\n      alert: false\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      input: {\r\n        todo: e.target.value\r\n      },\r\n      alert: false\r\n    })\r\n  }\r\n\r\n  addItem = () => {\r\n    if (this.state.input.todo) {\r\n      const str = this.state.input.todo,\r\n        title = str[0].toUpperCase() + str.slice(1),\r\n        newList = [...this.state.todoList];\r\n      newList.push({ todo: title, id: this.state.id })\r\n      this.setState({\r\n        todoList: newList,\r\n        input: { todo: '' },\r\n        id: this.state.id + 1,\r\n      })\r\n      localStorage.setItem('id', JSON.stringify(this.state.id + 1))\r\n      localStorage.setItem('todoList', JSON.stringify(newList))\r\n    }\r\n    else {\r\n      this.setState({\r\n        alert: true\r\n      })\r\n    }\r\n  }\r\n\r\n  editItem = (todo) => {\r\n    this.setState({\r\n      input: {\r\n        todo: todo.todo,\r\n        id: todo.id\r\n      },\r\n      edit: true\r\n    })\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    const filteredList = this.state.todoList.filter(todo => todo.id !== id)\r\n    this.setState({\r\n      todoList: filteredList\r\n    })\r\n    localStorage.setItem('todoList', JSON.stringify(filteredList))\r\n    if (!JSON.parse(localStorage.getItem('todoList'))[0]) {\r\n      localStorage.setItem('id', JSON.stringify(0))\r\n      this.setState({\r\n        id: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  update = (toEdit) => {\r\n    if (this.state.input.todo) {\r\n      const string = toEdit.todo,\r\n        firstCap = string[0].toUpperCase() + string.slice(1),\r\n        updateItem = this.state.todoList.map(todo => (todo.id === toEdit.id ? { todo: firstCap, id: toEdit.id } : todo))\r\n      this.setState({\r\n        todoList: updateItem,\r\n        input: {\r\n          todo: ''\r\n        },\r\n        edit: false\r\n      })\r\n      localStorage.setItem('todoList', JSON.stringify(updateItem))\r\n    }\r\n    else {\r\n      this.setState({\r\n        alert: true\r\n      })\r\n    }\r\n  }\r\n\r\n  onEdit = (e) => {\r\n    this.setState({\r\n      input: {\r\n        todo: e.target.value,\r\n        id: this.state.input.id\r\n      },\r\n      alert: false\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    document.getElementById('addForm').focus();\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.edit) {\r\n      document.getElementById('editForm').focus();\r\n    }\r\n    else {\r\n      document.getElementById('addForm').focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='appContainer'>\r\n        <h2 className='head'> TODO APP</h2>\r\n        <Alert id='alert' show={this.state.alert} variant='dark'>\r\n          Please enter an item!\r\n        </Alert>\r\n        <div className='addSec'>\r\n          {\r\n            this.state.edit ?\r\n              <>\r\n                <EditForm input={this.state.input} onChange={this.onEdit} />\r\n                <UpdateBtn input={this.state.input} update={this.update} />\r\n              </> :\r\n              <>\r\n                <AddForm onChange={this.onChange} input={this.state.input} />\r\n                <AddButton addItem={this.addItem} />\r\n              </>\r\n          }\r\n        </div>\r\n        { JSON.parse(localStorage.getItem('todoList')) ?\r\n          <TodoList todoList={JSON.parse(localStorage.getItem('todoList'))} deleteItem={this.deleteItem} editItem={this.editItem} />\r\n          : null\r\n        }\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}