{"version":3,"sources":["Components/AddButton/AddButton.jsx","Components/AddForm/AddForm.jsx","Components/TodoList/TodoList.jsx","Components/EditForm/EditForm.jsx","App.js","index.js"],"names":["AddButton","addItem","className","onClick","AddForm","onChange","input","type","value","TodoList","todoList","editItem","deleteItem","ListGroup","variant","map","todo","Item","Row","Col","id","EditForm","edit","update","App","props","e","setState","target","state","str","title","toUpperCase","slice","newItem","push","idVal","alert","newList","filter","toEdit","string","firstCap","updateItem","onEdit","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58c6ea1f.chunk.js","sourcesContent":["import './AddButton.css'\r\nimport { PlusCircleFill } from 'react-bootstrap-icons';\r\nconst AddButton = ({ addItem }) => {\r\n    return <PlusCircleFill className='icons addIcon' onClick={addItem} ></PlusCircleFill>\r\n}\r\nexport default AddButton;","const AddForm = ({ onChange, input }) => {\r\n    return (\r\n        <>\r\n            <input type='text' value={input} onChange={onChange} />\r\n        </>\r\n    )\r\n};\r\nexport default AddForm;","import { PencilSquare, XCircleFill } from 'react-bootstrap-icons';\r\nimport { ListGroup, Col, Row } from 'react-bootstrap';\r\nimport './TodoList.css'\r\nconst TodoList = ({ todoList, editItem, deleteItem }) => {\r\n    return (\r\n        <ListGroup variant='flush'>\r\n            {todoList.map((todo) => {\r\n                return <ListGroup.Item key={todo.id}>\r\n                    <Row className='li' >\r\n                        <Col>\r\n                            {todo.todo}\r\n                        </Col>\r\n                        <Col className='listIcons'>\r\n                            <PencilSquare className='icons editIcon' onClick={() => editItem(todo)}>Edit</PencilSquare>\r\n                            <XCircleFill className='icons delIcon' onClick={() => deleteItem(todo.id)}>Delete</XCircleFill>\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n            })}\r\n        </ListGroup>\r\n    )\r\n}\r\nexport default TodoList;","import './EditForm.css'\r\nconst EditForm = ({ edit, update, onChange }) => {\r\n    return (\r\n        <div>\r\n            <input value={edit.todo} onChange={onChange} />\r\n            <button className='updateBtn' onClick={() => { update(edit) }}>Update</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AddButton from './Components/AddButton/AddButton';\r\nimport AddForm from './Components/AddForm/AddForm'\r\nimport TodoList from './Components/TodoList/TodoList'\r\nimport EditForm from './Components/EditForm/EditForm'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      todoList: [],\r\n      input: '',\r\n      id: 0,\r\n      edit: ''\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value\r\n    })\r\n  }\r\n  addItem = () => {\r\n    if (this.state.input) {\r\n      const str = this.state.input,\r\n        title = str[0].toUpperCase() + str.slice(1),\r\n        newItem = [...this.state.todoList];\r\n      newItem.push({ todo: title, id: this.state.id })\r\n      const idVal = this.state.id;\r\n      this.setState({\r\n        todoList: newItem,\r\n        input: '',\r\n        id: idVal + 1,\r\n      })\r\n    }\r\n    else {\r\n      alert('Please enter an item')\r\n    }\r\n  }\r\n  editItem = (todo) => {\r\n    this.setState({\r\n      edit: {\r\n        todo: todo.todo,\r\n        id: todo.id\r\n      }\r\n    })\r\n  }\r\n  deleteItem = (id) => {\r\n    const newList = this.state.todoList.filter(todo => todo.id !== id)\r\n    this.setState({\r\n      todoList: newList\r\n    })\r\n  }\r\n  update = (toEdit) => {\r\n    const string = toEdit.todo,\r\n      firstCap = string[0].toUpperCase() + string.slice(1),\r\n      updateItem = this.state.todoList.map(todo => (todo.id === toEdit.id ? { todo: firstCap, id: toEdit.id } : todo))\r\n    this.setState({\r\n      todoList: updateItem,\r\n      edit: ''\r\n    })\r\n  }\r\n  onEdit = (e) => {\r\n    this.setState({\r\n      edit: {\r\n        todo: e.target.value,\r\n        id: this.state.edit.id\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='appContainer'>\r\n        <h1 className='head'> TODO APP</h1>\r\n        {\r\n          this.state.edit ?\r\n            <EditForm edit={this.state.edit} onChange={this.onEdit} update={this.update} /> :\r\n            <div>\r\n              <AddForm onChange={this.onChange} input={this.state.input} />\r\n              <AddButton addItem={this.addItem} />\r\n            </div>\r\n        }\r\n        { this.state.todoList[0] ?\r\n          <TodoList todoList={this.state.todoList} deleteItem={this.deleteItem} editItem={this.editItem} />\r\n          : null\r\n        }\r\n      </div >\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}